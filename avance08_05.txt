main------------
import 'package:flutter/material.dart';
import 'package:statefulclickcounter/screens/sonido_animal.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  static const String _title = 'Flutter Stateful Clicker Counter';
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SonidoAnimalesScreen(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});
  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.
  // This class is the configuration for the state.
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      // This call to setState tells the Flutter framework that something has
      // changed in this State, which causes it to rerun the build method below
      // so that the display can reflect the updated values. If we changed
      // _counter without calling setState(), then the build method would not be
      // called again, and so nothing would appear to happen.
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.
    return Scaffold(
      appBar: AppBar(
        // Here we take the value from the MyHomePage object that was created by
        // the App.build method, and use it to set our appbar title.
        title: const Text('Flutter Demo Click Counter'),
      ),
      body: Center(
        // Center is a layout widget. It takes a single child and positions it
        // in the middle of the parent.
        child: Column(
          // Column is also a layout widget. It takes a list of children and
          // arranges them vertically. By default, it sizes itself to fit its
          // children horizontally, and tries to be as tall as its parent.
          //
          // Column has various properties to control how it sizes itself and
          // how it positions its children. Here we use mainAxisAlignment to
          // center the children vertically; the main axis here is the vertical
          // axis because Columns are vertical (the cross axis would be
          // horizontal).
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: const TextStyle(fontSize: 25),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ),
    );
  }
}

--------------------------------
import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';

class SonidoAnimalesScreen extends StatefulWidget {
  const SonidoAnimalesScreen({Key? key}) : super(key: key);

  @override
  State<SonidoAnimalesScreen> createState() => _SonidoAnimalesScreenState();
}

class _SonidoAnimalesScreenState extends State<SonidoAnimalesScreen> {
  TextEditingController controlText =
      TextEditingController(); // es para recuperar o asignar contenido a la caja de texto
  final AudioPlayer _player = AudioPlayer();
  String? animalActual; // se encarga de reproducir sonido
  Map<String, Map<String, String>> datosAnimal = {
    'gato': {
      'image': 'assets/images/gato.png',
      'sound': 'assets/sounds/gato.mp3'
    },
    'perro': {
      'image': 'assets/images/perro.png',
      'sound': 'assets/sounds/perro.mp3'
    },
  };

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Sonido de Animales"),
      ),
      body: Column(
        children: [
          Text("Escribe nombre del animal: gato o perro"),
          TextField(
            controller: controlText,
          ),
          ElevatedButton(onPressed: buscarAnimal, child: Text("buscar")),
          SizedBox(
            height: 30,
          ),
          if (animalActual != null) ...[
            Image.asset(datosAnimal[animalActual]!['images']!),
            Text("es un: $animalActual"),
          ],
        ],
      ),
    );

    void buscarAnimal() {
      String nomAnimal = controlText.text;
      if (datosAnimal.containsKey(nomAnimal)) {
        //_player.play(AssetSource(datosAnimal[nomAnimal]['sound']!));
        setState(() {
          animalActual = nomAnimal;
        });
      }
    }
  }
}

verificar errores e importacion 